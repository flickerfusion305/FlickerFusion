runner: "mt_episode"
batch_size_run: 1
batch_size: 32 # Number of episodes to train on

# only use for initializing action selector
action_selector: "epsilon_greedy"
epsilon_start: 1.0
epsilon_finish: 0.05
epsilon_anneal_time: 2500

# update the target network every _ steps
target_update_interval: 200

# use the Q_Learner to train
agent_output_type: "q"
learner: "odis_learner"
double_q: True
mixer: "mt_qattn"
mixing_embed_dim: 32
hypernet_layers: 2
hypernet_embed: 128

# batch_size_run: 8

name: "mto"

# agent type
agent: "mt_odis"

# mac
mac: "mt_odis_mac"

# params about trans mixing network
entity_embed_dim: 64
attn_embed_dim: 8
skill_dim: 3
c_step: 1
beta: 0.001
coef_conservative: 5.0
coef_dist: 5.0
pretrain_steps: 5000
pretrain: True
t_max: 10000

head: 1
depth: 1

# params about observation decomposition
id_length: 4
max_agent: 15

test_interval: 100 # Test after {} timesteps have passed
log_interval: 10 # Log summary of stats after every {} timesteps
runner_log_interval: 10 # Log runner stats (not test stats) every {} timesteps
learner_log_interval: 10 # Log training stats every {} timesteps
save_model_interval: 500 # Save models after this many timesteps


