name: QMIX_atten_MLDG

# Parameters for meta-learning
meta_lr_scheme: "MLDG"
meta_alpha: 0.0005
meta_beta: 1.0
meta_gamma: 0.0005

# use epsilon greedy action selector
action_selector: "epsilon_greedy"
epsilon_start: 1.0 
epsilon_finish: 0.05
epsilon_anneal_time: 1000000 
epsilon_anneal_start: 0

runner: "parallel"
batch_size_run: 8
training_iters: 8

entity_last_action: True # Include the user-controlled agents' last actions (one_hot) in their entities

batch_size: 32 # Number of episodes to train on
buffer_size: 5000
t_max: 3000000 # Stop running after this many timesteps

# update the target network every {} episodes
target_update_interval: 200
 
# use the Q_Learner to train
agent_output_type: "q"
learner: "q_learner"
double_q: True
mixer: "flex_qmix"
mixing_embed_dim: 32
hypernet_embed: 128
softmax_mixing_weights: True

agent: "entity_attend_rnn"
rnn_hidden_dim: 128

mac: "entity_mac"
attn_embed_dim: 128
attn_n_heads: 4
double_attn: False

reward_standardization: True # Reward Standardization

env_args:
  entity_scheme: True